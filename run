#!/usr/bin/env bash

set -o errexit
set -o pipefail

source .env

function ps {
    docker compose ps
}

function up {
    docker compose up "${@}"
}

function down {
    docker compose down "${@}"
}

function composer {
    docker run --rm -u "$(id -u):$(id -g)" -v "$(pwd):/app" -w /app composer:2.6.3 composer "${@}"
}

function test {
    TEST_PATH="${@:-tests}"
    docker compose run --rm php ./vendor/bin/phpunit --color ${TEST_PATH} "${@}"
}

function phpcs {
    TEST_PATH="${@:-.}"
    docker compose run --rm php ./vendor/bin/phpcs ${TEST_PATH}
}

function phpcbf {
    TEST_PATH="${@:-.}"
    docker compose run --rm php ./vendor/bin/phpcbf ${TEST_PATH}
}

function db:reset {
    ./database/generateUserAndDB.sh > ./database/schema.sql
    docker compose cp database/schema.sql db:/tmp/
    docker compose exec db sh -c "MYSQL_PWD=${MYSQL_ROOT_PASSWORD} mysql -u ${MYSQL_ROOT_USER} < /tmp/schema.sql"
}
function db:clean {
    ./database/generateCleanDB.sh > ./database/clean.sql
    docker compose cp database/clean.sql db:/tmp/
    docker compose exec db sh -c "MYSQL_PWD=${MYSQL_ROOT_PASSWORD} mysql -u ${MYSQL_ROOT_USER} < /tmp/clean.sql"
}

function mysql {
    docker compose exec db sh -c "MYSQL_PWD=${MYSQL_ROOT_PASSWORD} mysql -u ${MYSQL_ROOT_USER} ${DB_NAME}"
}

TIMEFORMAT=$'\nTask completed in %3lR'
time "${@}"